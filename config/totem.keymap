#include "./helper_keypos_38keys.h"
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>


// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
#define BASE	0
#define NUMB 	1
#define NAV		2
#define TRI		3
#define NUE		4
#define MOUSE	5
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4 LB5  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4 RB5 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2


// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
	&lt {
    tapping-term-ms = <150>;
	};

	&sk {
		quick-release;
	};
	
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
/ {
    behaviors {
        hml: home_row_mods_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <210>;                				// repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;             				// delay positional check until key-release
        };

        hmr: home_row_mods_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <210>;                				// repeat on tap-into-hold
            require-prior-idle-ms = <150>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };

        sk_shft: sticky_shift_caps_word {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk RSHIFT>, <&caps_word>;

            mods = <(MOD_LSFT | MOD_RSFT)>;
        };
    };
	
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄	
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <LT3 LT2>;
            bindings = <&kp ESC>;
        };

        combo_bksp {
            timeout-ms = <50>;
            key-positions = <RT3 RT2>;
            bindings = <&kp BSPC>;
        };
    };
	
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄	
    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <NUMB NAV>;
            then-layer = <TRI>;
        };
    };
	
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "BASE";
            bindings = <
				&kp Q 			&kp W   		&kp E           &kp R          &kp T				&kp Y         &kp U        	&kp I         	&kp O    	  	&kp P
			    &hml LGUI A		&hml LALT S  	&hml LCTRL D	&hml LSHFT F   &kp G    			&kp H         &hmr RSHFT J 	&hmr RCTRL K  	&hmr RALT L  	&hmr RGUI SEMI
&lt MOUSE TAB	&kp Z			&kp X  			&kp C			&kp V          &kp B    			&kp N         &kp M			&kp COMMA		&kp DOT			&kp FSLH  		&kp SQT
												&none			&hml LALT TAB  &lt NUMB SPACE      	&lt NAV RET	  &kp BSPC		&sk_shft
				>;
        };

        numb_layer {
            label = "NUMB";
            bindings = <
				&kp KP_N1		&kp KP_N2		&kp KP_N3  		&kp KP_N4   	&kp KP_N5    		&kp KP_N6  	  &kp KP_N7  	&kp KP_N8  		&kp KP_N9   	&kp KP_N0
				&kp SEMI  &kp COLON  &kp PLUS  &kp EQUAL  &kp MINUS    								&kp AMPS   &kp LBRC  &kp RBRC  &kp GRAVE  &kp TILDE
	&kp LSHFT  	&kp DOT   &kp FSLH   &kp LT    &kp GT     &kp UNDER    								&kp STAR   &kp LPAR  &kp RPAR  &kp DOT    &kp FSLH   &trans
                                &trans    &trans     &kp LGUI     									&trans     &trans    &trans
            >;
        };

        nav_layer {
            label = "NAV";
            bindings = <
				&none  &kp N7  &kp N8  &kp N9  &kp C_BRI_UP    										&none     &kp C_VOL_DN  &kp C_VOL_UP  &kp C_MUTE  &none
				&none  &kp N4  &kp N5  &kp N6  &kp C_BRI_DN    										&kp LEFT  &kp DOWN      &kp UP        &kp RIGHT   &none
		&none 	&none  &kp N1  &kp N2  &kp N3  &none           										&none     &none         &none         &none       &none  &to BASE
							   &none   &kp N0  &none           										&none     &trans        &trans
            >;
        };

        hands_down_nue {
            label = "NUE";
            bindings = <
				&kp W  &kp F  &kp M          &kp P          &kp V           						&kp J         &kp DOT      &kp Q        &kp SQT  &kp Z
				&kp R  &kp S  &hml LCTRL N   &hml LGUI T    &kp B           						&kp COMMA     &hmr RGUI A  &hmr RCTRL E &kp I    &kp H
	&to BASE 	&kp X  &kp C  &kp L          &kp D          &kp G           						&kp UNDER     &kp U        &kp O        &kp Y    &kp K  &to NAV
							  &hml LALT TAB  &lt NUMB SPACE  &none           						&sk_shft      &lt NAV RET  &kp BSPC
            >;
        };
		
		adjust_layer {
            label = "TRI";
            bindings = <
				&sys_reset   &bt BT_CLR    &out OUT_TOG  &trans										&trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans
				&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans						&kp F11  &kp F4  &kp F5  &kp F6  &trans
	&trans  	&trans       &trans        &trans        &trans        &trans    					&kp F10	&kp F1  &kp F2  &kp F3  &trans  &trans
										   &trans        &trans        &trans    					&trans   &trans  &trans
            >;
        };
		
		mouse_layer {
            label = "MOUSE";
            bindings = <
				&sys_reset   &bt BT_CLR    &out OUT_TOG  &trans										&trans    &kp F12  &kp F7  &kp F8  &kp F9  &trans
				&bootloader  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &trans						&kp F11  &kp F4  &kp F5  &kp F6  &trans
	&trans  	&trans       &trans        &trans        &trans        &trans    					&kp F10	&kp F1  &kp F2  &kp F3  &trans  &trans
										   &trans        &trans        &trans    					&trans   &trans  &trans
            >;
        };
			
    };
	
	
};
